name: CI
on:
  # When code is pushed to main, and when a PR targeting main is updated.
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Runs tests ðŸ§ª
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Install tox-uv plugin
        run: uv tool install tox --with tox-uv

      - name: Run tests
        run: uv run tox

      - name: Run linter
        run: uv run ruff check

  build:
    name: Build distribution ðŸ“¦
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Build packages
        run: uv build

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-and-release:
    name: Publish to PyPI and create GitHub Release ðŸš€
    needs: build
    if: ${{ github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Merge pull request') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/metafind
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Sign distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
  
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "$(sed -n 's/^version = "\([^"]*\)".*/\1/p' pyproject.toml)" --repo "$GITHUB_REPOSITORY" --notes ""

      - name: Upload signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload "$(sed -n 's/^version = "\([^"]*\)".*/\1/p' pyproject.toml)" dist/** --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish to TestPyPI ðŸš€
    needs: build
    if: ${{ github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Merge pull request') }}
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/metafind
    permissions:
      id-token: write
    steps:
      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
